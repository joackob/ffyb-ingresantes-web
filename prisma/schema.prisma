// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Usuarios {
  id         String      @id @default(uuid())
  nombre     String
  apellido   String
  email      String      @unique
  contrasena String
  tipo       String // enum['tutor', 'tutorando', 'coordinador']
  tutorando  Tutorandos?
  tutor      Tutor?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

// encargada de guiar o supervisar a los tutorandos
model Tutor {
  id         String       @id @default(uuid())
  usuario    Usuarios     @relation(fields: [usuarioId], references: [id]) // Relación con el usuario, usando el campo usuarioId
  usuarioId  String       @unique
  tutorandos Tutorandos[] // Relación uno a muchos con Tutorandos 
}

// Es un usuario que recibe la tutoría del tutor
model Tutorandos {
  id        String     @id @default(uuid())
  usuario   Usuarios   @relation(fields: [usuarioId], references: [id]) // Relación con el usuario, usando el campo usuarioId
  usuarioId String     @unique
  carreras  Carreras[]
  tutor     Tutor      @relation(fields: [tutorId], references: [id])
  tutorId   String // Id del tutor que está relacionado con el tutorando
}

model Carreras {
  id           String         @id @default(uuid())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  nombre       String
  tutorando    Tutorandos     @relation(fields: [tutorandoId], references: [usuarioId])
  tutorandoId  String
  cuatrimestre Cuatrimestre[]
}

model Cuatrimestre {
  id          String        @id @default(uuid())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  carreraId   String
  carrera     Carreras      @relation(fields: [carreraId], references: [id])
  asignaturas Asignaturas[]
}

model Asignaturas {
  id             String         @id @default(uuid())
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  nombre         String
  cuatrimestre   Cuatrimestre   @relation(fields: [cuatrimestreId], references: [id])
  cuatrimestreId String
  correlativas   Correlativas[] @relation("correlativasDeLaAsignatura")
  asignatura     Correlativas?  @relation("asignaturaConCorrelativa")
}

model Correlativas {
  id            String      @id @default(uuid())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  asignatura    Asignaturas @relation("asignaturaConCorrelativa", fields: [asignaturaId], references: [id])
  asignaturaId  String      @unique
  correlativa   Asignaturas @relation("correlativasDeLaAsignatura", fields: [correlativaId], references: [id])
  correlativaId String
}

model Estudiante {
  id                     Int       @id @default(autoincrement())
  nombre                 String
  edad                   Int
  genero                 String
  carrera                String
  porcentajeDeCarrera    Float
  aprobadasPorCuatrimestre Int
  añoDeEgreso            Int
  notaPromedio           Float
  aprovadosEnElMejorCuatri Int
  mejorNota              Float
}
